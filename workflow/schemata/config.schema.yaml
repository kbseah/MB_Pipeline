$schema: "https://json-schema.org/draft/2020-12/schema"
description: "Snakemake configuration for metabarcoding pipeline MB_Pipeline"
type: object

properties:
  reads_table:
    type: string
    description: "Path to TSV table of samples and read files"
  paired:
    type: boolean
    default: true
    description: "Are read files paired?"
  protein_coding:
    type: boolean
    default: true
    description: "Is target sequence protein-coding? If true, use pseudogene-filtering pipeline"
  adapter_trimming_options:
    type: object
    description: "Options for adapter trimming with cutadapt"
    properties:
      5p:
        type: string
        description: "5-prime adapter sequence"
      3p:
        type: string
        description: "3-prime adapter sequence, if paired end reads"
      min_overlap:
        type: integer
        default: 23
        description: "Minimum sequence overlap for trimming"
      others_common:
        type: string
        description: "Other command line params passed verbatim to cutadapt, for both single and paired end reads"
      required:
        - 5p
        - min_overlap
  merge_options:
    type: array
    description: "Options for merging paired end reads, passed to Vsearch"
  filter_options:
    type: array
    description: "Options for quality filtering, passed to Vsearch"
  coding:
    type: object
    description: "Parameters for coding sequences"
    properties:
      code:
        type: integer
        default: 5
        enum: 
          [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 21, 22, 23, 24, 25, 26, 29, 30, 33]
        description: "NCBI translation table number, cannot be a stopless code (27, 28, 31)"
      frame:
        type: integer
        default: 3
        enum: [1, 2, 3]
        description: "Reading frame: expected codon position of the first base"
      hmm:
        type: string
        description: "Path to HMM file to screen translations; only first model in file will be used"
  denoising:
    type: object
    description: "Parameters for denoising, applicable to either Unoise or DnoisE"
    properties:
      alpha:
        type: integer
        default: 5
        description: "Clustering parameter alpha"
      minsize:
        type: integer
        default: 8
        description: "Minimum number of sequences in a cluster to be retained"
      method:
        type: array
        default: ["dnoise"]
        items:
          type: string
          enum:
            - "unoise"
            - "dnoise"
        description: "Which tool to use for denoising"
      required:
        - alpha
        - minsize
        - method
  dnoise_opts:
    type: object
    description: "Options to pass to DnoisE"
    properties:
      alpha_range:
        type: array
        description: "Range of alpha values to test for entropy ratio diagnostics"
      minsize_range:
        type: array
        description: "Range of minsize to test for entropy ratio diagnostics"
  community_table_options:
    type: array
    description: "Options for community table, to pass to Vsearch"
  treeprog:
    type: string
    default: "fasttree"
    description: "Program to use to calculate phylogenetic tree"
    enum:
      - "fasttree"
      - "iqtree"
  class_method:
    type: array
    default: ["sintax", "multilvl"]
    items:
      type: string
      enum:
        - "sintax"
        - "multilvl"
    description: "Taxonomic classification method to use, must be one of the keys under dbpaths"
  dbpaths:
    type: object
    description: "Paths to databases in Fasta or UDB format for taxonomic classification, keyed by classification method."
  class_thresholds:
    type: object
    description: "Cutoff score for taxonomic classification, keyed by classification method."

required:
  - reads_table
  - paired
  - protein_coding
  - adapter_trimming_options
  - filter_options
  - denoising
  - community_table_options
  - treeprog
  - class_method
  - dbpaths
  - class_thresholds

